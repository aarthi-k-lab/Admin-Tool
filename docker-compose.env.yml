version: '3.3'
services:
  ui:
    image: dtr.${DOCKER_DOMAIN}/${DTR_ORG_NAME}/${DTR_REPO_NAME}:${TAG}
    environment:
      - APP_ENV=${NAME_ENV}
      - RELEASE_ID=${RELEASE_ID}
      - GIT_ID=${TAG}
      - APP_URL_HOST=${TRAEFIK_FRONTEND_HOST}
    labels:
      com.docker.ucp.access.label: ${DDC_COLLECTION}
    networks:
      default:
      traefik:
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.platform.os == ${HOST}
      resources:
        limits:
          cpus: ${RSRC_MAX_CPU}
          memory: ${RSRC_MAX_MEM}
      labels:
        com.docker.ucp.access.label: ${DDC_COLLECTION}
        traefik.tags: ${TRAEFIK_TAGS}
        traefik.enable: "true"
        traefik.port: ${TRAEFIK_PORT}
        traefik.docker.network: ${TRAEFIK_NETWORK}
        traefik.backend: ${TRAEFIK_BACKEND}
        traefik.frontend.rule: Host:${TRAEFIK_FRONTEND_HOST}
        traefik.backend.loadbalancer.method: drr
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: ${SERVICE_RESTART_CONDITION}
        delay: 5s
        max_attempts: 3
        window: 120s
networks:
  traefik:
  default:
    external:
      name: ${TRAEFIK_NETWORK}
